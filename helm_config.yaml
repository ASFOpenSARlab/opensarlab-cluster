# !!!! This config is used in the first round of Franz's labs. It will not be used afterwards. Though some of the settings could still prove useful.
#
# This helm config file modifies the defaults found in zero-to-jupyterhub-k8s/jupyterhub/
# Possible values are scattered throughout the doc starting at https://z2jh.jupyter.org/en/latest/setup-jupyterhub.html

auth:
  admin:
    users:
    - ADMIN_USER

  whitelist:
    users:
    - ADMIN_USER

prePuller:
  continuous:
    enabled: true
  hook:
    enabled: true

proxy:
  https:
    enabled: false
  secretToken: SECRET_TOKEN
  service:
    nodePorts:
      http: NODE_PORT
    type: NodePort

singleuser:
  extraEnv:
    AWS_ACCESS_KEY_ID: NODE_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: NODE_SECRET_KEY
  image:
    name: IMAGE_NAME
    tag: IMAGE_TAG
  lifecycleHooks:
    postStart:
      exec:
        command:
        - gitpuller
        - https://github.com/asfadmin/asf-jupyter-notebooks.git
        - master
        - notebooks
  storage:
    capacity: 500Gi
  memory:
    guarantee: 6G

hub:
    auth:
      type: custom
      custom:
        className: oauthenticator.generic.GenericOAuthenticator
        config:
          login_service: "AWS Cognito"
          client_id: OAUTH_CLIENT_ID
          client_secret: OAUTH_CLIENT_SECRET

    extraEnv:
      OAUTH_CALLBACK_URL: https://eml-test-757592920.us-east-1.elb.amazonaws.com/hub/oauth_callback
      OAUTH2_AUTHORIZE_URL: https://opensarlab-test.auth.us-east-1.amazoncognito.com/oauth2/authorize
      OAUTH2_TOKEN_URL: https://opensarlab-test.auth.us-east-1.amazoncognito.com/oauth2/token
      OAUTH2_USERDATA_URL: https://opensarlab-test.auth.us-east-1.amazoncognito.com/oauth2/userInfo

    extraConfig:
      myAnnouncement.py: |
        import z2jh
        c.JupyterHub.template_vars = {'announcement': '{0}'.format(z2jh.get_config("custom.ANNOUNCEMENT"))}

      myCustomTemplatePaths.py: |
        c.JupyterHub.template_paths = ["/srv/jupyterhub"]

custom:
  ANNOUNCEMENT: ANNOUNCEMENT

cull:
  enabled: true
  timeout: 3600
  every: 300

scheduling:
  userScheduler:
    enabled: true
  #podPriority:
    #enabled: true
  #userPlaceholder:
    #replicas: 1
    #globalDefault: true
    #defaultPriority: 10
    #userPlaceholderPriority: 0
  #userPods:
    #nodeAffinity:
      #matchNodePurpose: require  # hub.jupyter.org/node-purpose=user
