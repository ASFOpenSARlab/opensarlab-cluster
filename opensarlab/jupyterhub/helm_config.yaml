# !!!! This config is used in the first round of Franz's labs. It will not be used afterwards. Though some of the settings could still prove useful.
#
# This helm config file modifies the defaults found in zero-to-jupyterhub-k8s/jupyterhub/
# Possible values are scattered throughout the doc starting at https://z2jh.jupyter.org/en/latest/setup-jupyterhub.html

proxy:
  https:
    enabled: false
  service:
    nodePorts:
      http: NODE_PORT
    type: NodePort

singleuser:
  startTimeout: 600
  storage:
    dynamic:
      storageClass: gp2
      pvcNameTemplate: claim-{username}
  defaultUrl: "/lab"
  extraFiles:
    user-hooks-sar:
      mountPath: /etc/jupyter-hooks/sar.sh
      mode: 0755
    user-hooks-sar_test:
      mountPath: /etc/jupyter-hooks/sar_test.sh
      mode: 0755
    user-hooks-no_smart_git:
      mountPath: /etc/jupyter-hooks/no_smart_git.sh
      mode: 0755
    user-hooks-pull:
      mountPath: /etc/jupyter-hooks/scripts/pull.py
    user-others-check_storage:
      mountPath: /etc/jupyter-hooks/resource_checks/check_storage.py
    user-custom_magics:
      mountPath: /etc/jupyter-hooks/custom_magics/00-df.py
    user-template-page:
      mountPath: /etc/jupyter-hooks/templates/page.html
      mode: 0755
    user-template-tree:
      mountPath: /etc/jupyter-hooks/templates/tree.html
      mode: 0755

prePuller:
  continuous:
    enabled: false
  hook:
    enabled: false

cull:
  enabled: true
  timeout: 3600
  every: 300

scheduling:
  userPlaceholder:
    enabled: false
  userScheduler:
    enabled: true
  corePods:
    nodeAffinity:
      matchNodePurpose: require # hub.jupyter.org/node-purpose=core
  userPods:
    nodeAffinity:
      matchNodePurpose: require # hub.jupyter.org/node-purpose=user

custom:
  OAUTH_JUPYTER_URL: OAUTH_JUPYTER_URL
  OAUTH_DNS_NAME: OAUTH_DNS_NAME
  OAUTH_POOL_NAME: OAUTH_POOL_NAME
  CLUSTER_NAME: CLUSTER_NAME
  COST_TAG_KEY: COST_TAG_KEY
  COST_TAG_VALUE: COST_TAG_VALUE
  AZ_NAME: AZ_NAME
  REGISTRY_URI: REGISTRY_URI

hub:
  config:
    JupyterHub:
      admin_access: true
    Authenticator:
      admin_users:
        - ADMIN_USER

  image:
    pullPolicy: Always
    name: HUB_IMAGE_NAME_HERE
    tag: HUB_IMAGE_TAG_HERE

  extraFiles:
    hooks:
      mountPath: /usr/local/etc/jupyterhub/jupyterhub_config.d/hooks.py
    hooks-pv:
      mountPath: /home/jovyan/hooks/pv.yaml
      mode: 0755
    hooks-pvc:
      mountPath: /home/jovyan/hooks/pvc.yaml
      mode: 0755
    profiles:
      mountPath: /usr/local/etc/jupyterhub/jupyterhub_config.d/profiles.py
    services:
      mountPath: /usr/local/etc/jupyterhub/jupyterhub_config.d/services.py
    lib-logout:
      mountPath: /usr/local/lib/python3.8/dist-packages/generic_with_logout.py
    lib-groups:
      mountPath: /usr/local/lib/python3.8/dist-packages/jupyterhub/groups.py
    lib-handlers-groups:
      mountPath: /usr/local/lib/python3.8/dist-packages/jupyterhub/handlers/groups.py
    lib-handlers-init:
      mountPath: /usr/local/lib/python3.8/dist-packages/jupyterhub/handlers/__init__.py
    share-images-alaska_satellite_facility_1000:
      mountPath: /usr/local/share/jupyterhub/static/images/alaska_satellite_facility_1000.png
    share-images-blue2:
      mountPath: /usr/local/share/jupyterhub/static/images/ASFLogo-Blue2.png
    share-nasa_logo:
      mountPath: /usr/local/share/jupyterhub/static/images/NASA_logo.svg
    share-js-groups:
      mountPath: /usr/local/share/jupyterhub/static/js/groups.js
    share-templates-groups:
      mountPath: /usr/local/share/jupyterhub/templates/groups.html
    share-templates-login:
      mountPath: /usr/local/share/jupyterhub/templates/login.html
    share-templates-pending:
      mountPath: /usr/local/share/jupyterhub/templates/pending.html
    share-templates-custom-page:
      mountPath: /usr/local/share/jupyterhub/templates/custom/page.html

  extraConfig:
    auth.py: |
      # Auth has to be put in extraConfig. If it is in extraFiles, JupyterHub will overwrite with the default dummy auth.
      import os
      import z2jh

      try:
          os.environ["OAUTH_DNS_NAME"] = z2jh.get_config("custom.OAUTH_DNS_NAME")
          os.environ["OAUTH_JUPYTER_URL"] = z2jh.get_config("custom.OAUTH_JUPYTER_URL")
          os.environ['OAUTH_POOL_NAME'] = z2jh.get_config("custom.OAUTH_POOL_NAME")
          os.environ['REGION_NAME'] = z2jh.get_config('custom.AZ_NAME')[:-1]

          from generic_with_logout import GenericOAuthenticator
          c.JupyterHub.authenticator_class = GenericOAuthenticator

      except Exception as e:
          print(e)

    customTemplates.py: |
      c.JupyterHub.template_paths = ["/usr/local/share/jupyterhub/templates/custom/"]
