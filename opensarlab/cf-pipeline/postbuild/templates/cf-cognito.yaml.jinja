---

{% set parameters = opensarlab['parameters'] -%}

AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  
  DeploymentURL:
    Type: String
    Description: "FQDN of cluster (including https://). If the domain isn't known at the time, use Load Balancer."
    Default: {{ parameters.deployment_url }}

  AdminEmailSNSArn:
    Type: String
    Description: "Arn of AWS SES vertified email address"
    Default: {{ parameters.admin_email_address_sns_arn }}
    
  CostTagKey:
    Type: String
    Description: "The key of the cost tag used for filtering the budget, etc. Note that one part of the cloudformation file needs to be hardcoded."
    Default: {{ parameters.cost_tag_key }}

  CostTagValue:
    Type: String
    Description: "The value of the cost tag used for filtering the budget, etc."
    Default: {{ parameters.cost_tag_value }}

Resources:

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: !Sub ${AWS::Region}-${CostTagValue}-cluster-cognito-lambda-role
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: Logs
            Effect: Allow
            Action:
              - logs:*
            Resource: arn:aws:logs:*:*:*
          - Sid: Cognito
            Effect: Allow
            Action:
              - cognito-idp:*
            Resource: "*"
          - Sid: SES
            Effect: Allow
            Action:
              - ses:*
            Resource: "*"
          - Sid: Lambda
            Effect: Allow
            Action:
              - lambda:InvokeFunction
            Resource: "*"

  PreAuthFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.8
      Tags:
        - Key: !Sub ${CostTagKey}
          Value: !Sub ${CostTagValue}
      Code:
        ZipFile: !Sub |
          import secrets
          import boto3

          def lambda_handler(event, context):
            print("Pre-auth logging function for cluster '${CostTagValue}-cluster'")

            user_pool_id = event['userPoolId']
            username = event['userName']
            user_status = 'unknown'
            email_verified = 'unknown'

            try:
              user_status = event['request']['userAttributes']['cognito:user_status']
            except Exception as e:
              pass

            try:
              email_verified = event['request']['userAttributes']['email_verified']
            except Exception as e:
              pass

            print(f"User '{username}' with status '{user_status}' and verified email is '{email_verified}'.")

            if user_status == 'FORCE_CHANGE_PASSWORD' and email_verified == 'true':
              print("Force user password reset to random password to overcome FORCE_CHANGE_PASSWORD status.")
              password = f"qQ1!{secrets.token_urlsafe(6)}"
              cognito = boto3.client('cognito-idp', region_name="${AWS::Region}")
              response = cognito.admin_set_user_password(
                UserPoolId=user_pool_id,
                Username=username,
                Password=password,
                Permanent=True
              )
              # User will need to use the Forgot Password link to finish setting up.

            return event

  PostEmailVertificationFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: lambda_handler.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.8
      Tags:
        - Key: !Sub ${CostTagKey}
          Value: !Sub ${CostTagValue}
      Code:
        S3Bucket: !Sub ${AWS::Region}-${CostTagValue}-lambda
        S3Key: lambda_handler.py

  LogFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.8
      Tags:
        - Key: !Sub ${CostTagKey}
          Value: !Sub ${CostTagValue}
      Code:
        ZipFile: !Sub |
          def lambda_handler(event, context):
      
            print("Generic logging function for cluster ${CostTagValue}-cluster")
            print(event)
            
            return event

  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    DeletionPolicy: Retain
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_email
            Priority: 1
          #- Name: verified_phone_number
          #  Priority: 2
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
        InviteMessageTemplate:
          EmailMessage: Your username is {username} and temporary password is {####}.
          EmailSubject: Your temporary password
          #SMSMessage: 'Your username is {username} and temporary password is {####}. '
        #UnusedAccountValidityDays: 1
      AutoVerifiedAttributes:
        - email
      EmailConfiguration:
        #EmailSendingAccount: COGNITO_DEFAULT
        SourceArn: !Sub '${AdminEmailSNSArn}'
        EmailSendingAccount: DEVELOPER
      EmailVerificationMessage: !Sub | 
        <p style="padding: 3px; border: 3px solid grey;">
          By signing into <i>${DeploymentURL}</i>,
          operated by the Alaska Satellite Facilty (ASF), 
          Users agree to be responsible stewards of server resources and data. 
          While ASF will give reasonable effort to keep data safe and resources running, 
          such data and resources are not guaranteed. 
          It is recommended that data be downloaded and backed up often.
        </p>
        <p></p>
        <p></p>
        Your verification code is <b>{####}</b>.
      EmailVerificationSubject: Your verification code
      LambdaConfig:
        PostAuthentication: !GetAtt LogFunction.Arn
        PostConfirmation: !GetAtt PostEmailVertificationFunction.Arn
        PreAuthentication: !GetAtt PreAuthFunction.Arn
        PreSignUp: !GetAtt LogFunction.Arn
        PreTokenGeneration: !GetAtt LogFunction.Arn
      MfaConfiguration: 'OFF'
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
          TemporaryPasswordValidityDays: 1
      Schema:
        - AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: false
          Name: sub
          Required: true
          StringAttributeConstraints:
            MaxLength: '2048'
            MinLength: '1'
        - AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Name: name
          Required: true
          StringAttributeConstraints:
            MaxLength: '2048'
            MinLength: '0'
        - AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Name: email
          Required: true
          StringAttributeConstraints:
            MaxLength: '2048'
            MinLength: '0'
      #SmsAuthenticationMessage: 'Your authentication code is {####}. '
      #SmsVerificationMessage: 'Your verification code is {####}. '
      UsernameConfiguration:
        CaseSensitive: True
      UserPoolName: !Sub ${CostTagValue}-cluster
      UserPoolTags:
        osl-billing: !Sub ${CostTagValue}
      VerificationMessageTemplate:
        #SmsMessage: 'Your verification code is {####}. '
        EmailMessage: !Sub |
          <p style="padding: 3px; border: 3px solid grey;">
            By signing into <i>${DeploymentURL}</i>,
            operated by the Alaska Satellite Facilty (ASF), 
            Users agree to be responsible stewards of server resources and data. 
            While ASF will give reasonable effort to keep data safe and resources running, 
            such data and resources are not guaranteed. 
            It is recommended that data be downloaded and backed up often.
          </p>
          <p></p>
          <p></p>
          Your verification code is <b>{####}</b>.
        EmailSubject: Your verification code
        DefaultEmailOption: CONFIRM_WITH_CODE

  CognitoUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties: 
      Domain: !Sub ${CostTagValue}-cluster
      UserPoolId: !Ref CognitoUserPool

  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      AllowedOAuthFlows: 
        - code
      AllowedOAuthFlowsUserPoolClient: True
      AllowedOAuthScopes: 
        - openid
      CallbackURLs: 
        - !Sub "${DeploymentURL}/hub/oauth_callback"
      ClientName: !Sub ${CostTagValue}-cluster
      ExplicitAuthFlows: 
        - ALLOW_CUSTOM_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_USER_SRP_AUTH
      GenerateSecret: True
      LogoutURLs:
        - !Sub "${DeploymentURL}"
      PreventUserExistenceErrors: ENABLED
      RefreshTokenValidity: 1
      SupportedIdentityProviders: 
        - COGNITO
      UserPoolId: !Ref CognitoUserPool
